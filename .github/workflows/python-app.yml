# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: '! github.event.pull_request.draft'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: [ 3.8, 3.9, "3.10", "3.11", "3.12" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        # Python <3.10 not available for macos-latest (macos-14-arm64)
        # https://github.com/actions/setup-python/issues/696#issuecomment-1637587760
        exclude:
          - { python-version: 3.8, os: macos-latest }
          - { python-version: 3.9, os: macos-latest }
        include:
          - { python-version: 3.8, os: macos-13 }
          - { python-version: 3.9, os: macos-13 }

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint with flake8
        run: |
          python -m pip install flake8
          flake8 . --max-line-length=127
      - name: Verify sorted imports
        run: |
          python -m pip install isort
          isort . -m HANGING_INDENT -l 120 --check-only
      - name: Test install
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U .
      - name: Test show usage
        run: |
          python -m pymobiledevice3 --help
          python -m pymobiledevice3 activation --help
          python -m pymobiledevice3 afc --help
          python -m pymobiledevice3 amfi --help
          python -m pymobiledevice3 apps --help
          python -m pymobiledevice3 backup2 --help
          python -m pymobiledevice3 bonjour --help
          python -m pymobiledevice3 companion --help
          python -m pymobiledevice3 crash --help
          python -m pymobiledevice3 developer --help
          python -m pymobiledevice3 diagnostics --help
          python -m pymobiledevice3 lockdown --help
          python -m pymobiledevice3 mounter --help
          python -m pymobiledevice3 notification --help
          python -m pymobiledevice3 pcap --help
          python -m pymobiledevice3 power-assertion --help
          python -m pymobiledevice3 processes --help
          python -m pymobiledevice3 profile --help
          python -m pymobiledevice3 provision --help
          python -m pymobiledevice3 remote --help
          python -m pymobiledevice3 restore --help
          python -m pymobiledevice3 springboard --help
          python -m pymobiledevice3 syslog --help
          python -m pymobiledevice3 usbmux --help
          python -m pymobiledevice3 webinspector --help
          python -m pymobiledevice3 version --help